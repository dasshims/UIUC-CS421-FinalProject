
Generic programming libraries comparison/benchmark
------------

This directory contains a set of haskell programs that test
generic functions. Each test consists of a module written by the
"end user" in which he/she calls a type-indexed function on an
existing data type (usually Company). This Haskell module,
which may be found at the root directory, i.e. TestGEq.hs ,
imports a generic module. It is this generic module that
contains the generic function, already specialised for
the requested data type.

Such a generic module exists for each generic programming library,
it can be found in the library directory, i.e. LIGD/GEq.hs .
This module contains the generic function itself,
which is written by the power user. The specialization of this
generic function to, say, the Company data type is written by the
End User.

These generic modules use the framework provided by the generic
library, which is written by the Library Writer.

Running the tests
-------
Type

  runghc test.hs

in the command line.

At the moment the gshow test fails for the SYB library, due to the
printing of parenthesis around nullary constructors.

Generating expected results
------
The results for files may be generated by invoking
the genExpected function inside test.hs from within ghci.
A more friendly way to generate results will soon follow.

Generic test code
------
The present testing code is heavily based on code
that Stephanie Weirich contributed to the generics
repository.

